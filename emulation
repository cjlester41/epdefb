import os
import time
import logging
import xml.etree.ElementTree as ET
import pypdfium2 as pdfium
from epd_emulator import epdemulator 
from PIL import Image, ImageFont
from getkey import getkey, keys

#import pygame
#pygame.init()

current_dir = os.path.dirname(os.path.abspath(__file__))


try:
    
    tree = ET.parse("d-tpp_Metafile.xml")
    root = tree.getroot()       
    dest = 'PDX' #input('Destination: ').upper()
    rnwy = '28' #input('Runway: ').upper()
    pdfs = []
    chrts = []
            
    for airport_name in root.findall('.//airport_name[@apt_ident="' + dest + '"]'):
        for chart_name, pdf_name in zip(airport_name.findall(".//chart_name"), airport_name.findall(".//pdf_name")):
            if rnwy in (chart_name.text):                
                chrts.append(chart_name.text)
                pdfs.append(pdf_name.text)
            elif rnwy == 'ALL':
                chrts.append(chart_name.text)
                pdfs.append(pdf_name.text)

    #questions = [inquirer.List('list', message="SELECT APPROACH FOR " + airport_name.get('ID'), choices=chrts)]
    #answers = inquirer.prompt(questions)

    epd = epdemulator.EPD(config_file="epd10in3", use_tkinter=False, use_color=False, update_interval=1, reverse_orientation=False)
    epd.init()    
    width, height = epd.width, epd.height 
    picdir = os.path.join(current_dir, 'images')
    fontdir = os.path.join(current_dir, 'fonts')
    font = ImageFont.truetype(os.path.join(fontdir, 'Arial.ttf'), 48)
    image1 = Image.open(os.path.join(picdir, 'bjorn.bmp'))
    new_width1, new_height1 = int(image1.width * 0.75), int(image1.height * 0.75)
    image1 = image1.resize((new_width1, new_height1))
    x_center1 = (width - new_width1) // 2
    y_bottom1 = height - new_height1
    
    y = 50
    c = 0

    while True:

        epd.Clear(255)
        draw = epd.draw
        i = 0
    
        for chrt in chrts:               
            draw.text((50, 50 + (i * 50)), chrt, font=font, fill=0)
            i += 1

        draw.rectangle((50, y, 600, y + 52), fill=0, outline=0)
        draw.text((50, y), chrts[c], font=font, fill=255)        
        #y += 50
        #c += 1

         

        #draw.rectangle((1, 1, width -1 , height -1 ), outline=0) #Draw a rectangle
        #draw.line((1, 20, width - 1, 20), fill=0) #Draw a line                               
        #epd.paste_image(image1, (x_center1, y_bottom1 - 1))                   
        
        image_buffer = epd.get_frame_buffer(draw)
        epd.display(image_buffer) 

        key = getkey()
        if key == keys.UP:
            print('up')
            y -= 50
            c -= 1
            continue
        if key == keys.DOWN:
            print('down')
            y += 50 
            c += 1  
            continue    
        if key == 'o':
            trgt = pdfs[c]    
            print(pdfs[c])

            pdf = pdfium.PdfDocument('tppData/' + trgt)
            page = pdf.get_page(0)
            pil_image = page.render(scale = 300/72).to_pil()
            image_name =f"images/bjorn.bmp"
            pil_image.save(image_name)  
           

            epd.Clear(255)
            epd.paste_image(image1, (x_center1, y_bottom1 - 1))
            image_buffer = epd.get_frame_buffer(draw)
            epd.display(image_buffer)

            input()

        #time.sleep(5)    

    #pard = dict(zip(chrts, pdfs))


except IOError as e:
    logging.info(e)

except KeyboardInterrupt:
    logging.info("ctrl + c:")
    exit()

